pipeline:
  name: python-pipeline-samples
  identifier: pythonpipelinesamples
  projectIdentifier: jcproject
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: jcgithubconnector
        build: <+input>
  stages:
    - stage:
        name: Build Test and Push
        identifier: Build_Test_and_Push
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Compile Code
                  identifier: Compile_Code
                  spec:
                    connectorRef: jc-dockerhub-token
                    image: python:3.10.6-alpine
                    shell: Sh
                    command: python -m compileall ./
              - step:
                  type: Run
                  name: Create Docker file
                  identifier: Create_Docker_file
                  spec:
                    connectorRef: jc-dockerhub-token
                    image: alpine
                    shell: Sh
                    command: |-
                      touch pythondockerfile
                      cat > pythondockerfile <<- EOM
                      FROM python:3.10.6-alpine
                      WORKDIR /python-pipeline-samples
                      ADD . /python-pipeline-samples
                      RUN pip install -r requirements.txt
                      CMD ["python" , "app.py"]
                      EOM
                      cat pythondockerfile
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push to Docker Hub
                  identifier: Build_and_Push_to_Docker_Hub
                  spec:
                    connectorRef: jcdockerhubconnector
                    repo: john8260/python-project
                    tags:
                      - latest
                    dockerfile: pythondockerfile
          platform:
            os: Linux
            arch: Arm64
          runtime:
            type: Cloud
            spec: {}
    - stage:
        name: Integration tests
        identifier: Integration_tests
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          infrastructure:
            useFromStage: Build_Test_and_Push
          execution:
            steps:
              - step:
                  type: Background
                  name: Python server
                  identifier: Python_server
                  spec:
                    connectorRef: jc-dockerhub-token
                    image: john8260/python-project
                    shell: Sh
                    command: python3 /python-pipeline-samples/app.py
              - step:
                  type: Run
                  name: Test connection to the server
                  identifier: Test_connection_to_the_server
                  spec:
                    connectorRef: jc-dockerhub-token
                    image: curlimages/curl:7.73.0
                    shell: Sh
                    command: |-
                      sleep 10
                      curl localhost:5000
